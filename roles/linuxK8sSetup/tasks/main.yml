---
- name: configure k8s module file
  ansible.builtin.template: 
    src: "{{ item.src }}{{ item.file }}.j2"
    dest: "{{ item.dest }}{{ item.file }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  loop: "{{ modules_loadd }}"

- name: kernel module setup for k8s
  community.general.modprobe:
    name: "{{ item.module }}"
    state: "{{ item.state }}"
  loop: "{{ k8s_kernel_modules }}"

- name: configure k8s module file
  ansible.builtin.template: 
    src: "{{ item.src }}{{ item.file }}.j2"
    dest: "{{ item.dest }}{{ item.file }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  loop: "{{ sysctld }}"
  register: moduleUpdate

- name: sysctl --system
  ansible.builtin.command: sysctl --system
  when: moduleUpdate.results | selectattr('changed', 'equalto', true) | list | length > 0

- name: check swap status
  ansible.builtin.command: swapon -s
  register: swap_check
  failed_when: false
  changed_when: false

- name: swap off
  ansible.builtin.command: swapoff -a
  when: swap_check.stdout

- name: unmount swap entry and edit /etc/fstab
  ansible.posix.mount:
    src: "{{ mountPoint.k8s.src }}"
    path: "{{ mountPoint.k8s.path }}"
    state: "{{ mountPoint.k8s.state }}"
  register: mountExec

- name: mount new /etc/fstab
  ansible.builtin.command:
    cmd: mount -a
  when: mountExec.changed

- name: unmount apply (daemon-reload)
  ansible.builtin.command:
    cmd: systemctl daemon-reload
  when: mountExec.changed

- name: remove swap file
  ansible.builtin.file:
    path: "{{ mountPoint.k8s.path }}"
    state: absent

- name: configure /etc/hosts
  ansible.builtin.template:
    src: "{{ etcHosts.src }}{{ etcHosts.file }}.j2"
    dest: "{{ etcHosts.dest }}{{ etcHosts.file }}"
    owner: "{{ etcHosts.owner }}"
    group: "{{ etcHosts.group }}"
    mode: "{{ etcHosts.mode }}"

# コンテナエンジンを指定できるようにセットアップタスクは切り出し。
- name: configure containerd.service
  ansible.builtin.import_tasks: containerd.yml
