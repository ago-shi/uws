---
# aptキャッシュupdate & upgrade
# 基本パッケージのインストール
# タイムゾーン設定
# 時刻同期設定
# ネットワーク設定

- name: Disable cloud-init
  ansible.builtin.file:
    path: "{{ cloudInit.path }}{{ cloudInit.file }}"
    state: touch
    access_time: preserve
    modification_time: preserve

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true
    upgrade: full
    purge: true

- name: install basic packages
  ansible.builtin.apt: 
    name: "{{ item.name }}"
    state: "{{ item.state }}"
  loop: "{{ apt_basic_packages }}"

- name: timezone setup to "{{ datetime_timezone }}"
  community.general.timezone:
    name: "{{ datetime_timezone }}"

- name: configure Chrony
  ansible.builtin.template:
    src: "{{ aptPackage.chronyConf.src }}{{ aptPackage.chronyConf.file }}.j2"
    dest: "{{ aptPackage.chronyConf.dest }}{{ aptPackage.chronyConf.file }}"
    owner: "{{ aptPackage.chronyConf.owner }}"
    group: "{{ aptPackage.chronyConf.group }}"
    mode: "{{ aptPackage.chronyConf.mode }}"
  notify: Restart chrony service

- name: configure network (check currnet netplan filename)
  ansible.builtin.stat:
    path: "{{ netplanPath }}{{ item }}"
  register: file_stat
  loop: "{{ nwBuiltinFiles }}"

- name: Rename netplanfile
  ansible.builtin.command: mv "{{ netplanPath }}{{ item.item }}" "{{ netplanPath }}{{ item.item }}.org"
  when: item.stat.exists
  loop: "{{ file_stat.results }}"

- name: configure network (transfer netplan file)
  ansible.builtin.template:
    src: "{{ item.src }}{{ item.file }}.j2"
    dest: "{{ item.dest }}{{ item.file }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  loop: "{{ netplan }}"
  notify: netplan apply
